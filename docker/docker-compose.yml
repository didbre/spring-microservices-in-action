version: '2.1'
services:
  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB:       "ostock_dev"
    volumes:
#     le <10>, <20>, permet de charger les fichiers par ordre.
      - ./init.sql:/docker-entrypoint-initdb.d/10-init.sql
      - ./data.sql:/docker-entrypoint-initdb.d/20-data.sql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # http 127.0.0.1:8071/actuator/health
  configserver:
    image: ostock/configserver:0.0.1-SNAPSHOT
    ports:
      - "8071:8071"
#    environment:
#      ENCRYPT_KEY: "fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo"
    networks:
      backend:
        aliases:
          - "configserver"

  # http 127.0.0.1:8070/actuator/health
  # console web : http://127.0.0.1:8070
  eurekaserver:
    image: ostock/eurekaserver:0.0.1-SNAPSHOT
    ports:
      - "8070:8070"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - "eurekaserver"

  # http 127.0.0.1:8072/actuator/health
  gatewayserver:
    image: ostock/gatewayserver:0.0.1-SNAPSHOT
    ports:
      - "8072:8072"
    environment:
      PROFILE: "default"
      SERVER_PORT: "8072"
      CONFIGSERVER_URI: "http://configserver:8071"
      EUREKASERVER_URI: "http://eurekaserver:8070/eureka/"
      EUREKASERVER_PORT: "8070"
      CONFIGSERVER_PORT: "8071"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      eurekaserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - "gateway"

  licensingservice:
    image: ostock/licensing-service:0.0.1-SNAPSHOT
    environment:
      PROFILE: "dev"
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY:       "IMSYMMETRIC"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    ports:
      - "8082:8082"
    networks:
      - backend

  # http 127.0.0.1:8072/organization/actuator/health
  # http 127.0.0.1:8072/organization/v1/organization/d898a142-de44-466c-8c88-9ceb2c2429d3
  # important : on accede au service via le gateway server via le port 8072. Si on utilise le port 8081 definit
  # ci-dessous, on a une erreur 404, ce qui est correct
  organizationservice:
    image: ostock/organization-service:0.0.1-SNAPSHOT
    environment:
      PROFILE: "dev"
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY:       "IMSYMMETRIC"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    ports:
      - "8081:8081"
    networks:
      - backend

#  keycloak:
#    image: jboss/keycloak
#    restart: always
#    environment:
#      KEYCLOAK_USER: admin
#      KEYCLOAK_PASSWORD: admin
#    ports:
#      - "8080:8080"
#    networks:
#      backend:
#        aliases:
#            - "keycloak"

networks:
  backend:
    driver: bridge